/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Consultores;

import DataBase.ConexionMySQL;
import com.mysql.jdbc.Statement;
import java.awt.Color;
import java.awt.Frame;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author C0nacyt
 */
public class JPanelBusquedaConsultor extends javax.swing.JDialog {

    int x, y;
    DefaultTableModel TABLARegistros;
    String buscaPor, cadena, value;

    /**
     * Creates new form Muestra
     * @param parent
     * @param modal
     * @param ModoBusqueda
     * @param cadena
     * @param value
     */
    public JPanelBusquedaConsultor(java.awt.Frame parent, boolean modal, String ModoBusqueda, String cadena, String value) {
        super(parent, modal);
        initComponents();
//        Shape forma = new RoundRectangle2D.Double(0, 0, this.getBounds().width, this.getBounds().height, 30, 30);
////        AWTUtilities.setWindowShape(this, forma);
        this.cadena = cadena;
        this.value = value;
        this.setLocationRelativeTo(null);
        buscaPor = ModoBusqueda;
        CargaDatos(cadena, value);
        txtBuscar.selectAll();
        if (buscaPor.equals("CON")) {
            lblTitulo.setText("Seleccione un registro para ver la informacón del consultor");
        } else if (buscaPor.equals("PRO")) {
            lblTitulo.setText("Seleccione un Proyecto para ver la informacón completa");
        }
    }

    private void CargaDatos(String Cadena, String value) {
        String sSQL = Cadena;
        String[] registro = new String[12];
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = (Connection) mysql.Conectar();
        int Cont = 0;

        if (buscaPor.equals("CON")) {
            String[] titulos = {"No", "NOMBRE", "PRIMER APELLIDO", "SEGUNDO APELLIDO", "CORREO ACTUAL"};
            TABLARegistros = new DefaultTableModel(null, titulos);

            try {
                Statement st = (Statement) cn.createStatement();
                ResultSet rs = st.executeQuery(sSQL);
                //`nombre_c`, `apellidoP_c`, `apellidoM_c`, `correo_c`, `estatus_c`
                while (rs.next()) {
                    registro[0] = rs.getString("contador");
                    registro[1] = rs.getString("nombre_c");
                    registro[2] = rs.getString("apellidoP_c");
                    registro[3] = rs.getString("apellidoM_c");
                    registro[4] = rs.getString("correo_c");
                    TABLARegistros.addRow(registro);
                    Cont++;
                }
                lblFound.setText("Se encontraron " + Cont + " registro(s) que coinciden con '" + value + "':");
                TBLRegistros.setModel(TABLARegistros);
                AjustaAnchosTabla(1);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR AL BUSCAR REGISTRO, INTENTE CON OTRO.\nERROR: " + e);
            }
        } else if (buscaPor.equals("PRO")) {

        }

    }

    private void AjustaAnchosTabla(int Tabla) {
        if (Tabla == 1) {
            int[] anchos = {30, 121, 132, 132, 239};
            for (int i = 0; i < TBLRegistros.getColumnCount(); i++) {
                TBLRegistros.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
        }
        else if (Tabla == 2) {
            int[] anchos = {20, 110, 300};
            for (int i = 0; i < TBLRegistros.getColumnCount(); i++) {
                TBLRegistros.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
        }
    }

    //BUSQUEDA DEL CONSULTOR QUE REGRESA EL ID PARA MANDARLO A LA CLASE DE EDITAR CONSULTOR
    private String BuscaConsultor(String consultaSQL) {
        String[] ID = new String[1];
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn = (Connection) mysql.Conectar();
        try {
            Statement st1 = (Statement) cn.createStatement();
            ResultSet rs1 = st1.executeQuery(consultaSQL);
            while (rs1.next()) {
                ID[0] = rs1.getString("ID_consultor");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No es posible obtener el ID\n ERROR: " + ex);
        }
        return ID[0];
    }
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBLRegistros = new javax.swing.JTable();
        lblFound = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        CBOStatus = new javax.swing.JComboBox<>();
        lblFound1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        lblTitulo.setBackground(new java.awt.Color(255, 255, 255));
        lblTitulo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("TITULO AQUI");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitulo)
                    .addComponent(jLabel1))
                .addGap(247, 247, 247))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TBLRegistros.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        TBLRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TBLRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBLRegistrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TBLRegistros);

        lblFound.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblFound.setForeground(new java.awt.Color(51, 51, 51));
        lblFound.setText("Se encontraron: # registros");

        txtBuscar.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        txtBuscar.setText("search...");
        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarMouseClicked(evt);
            }
        });
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        jLabel17.setBackground(Color.decode("#4D92DF"));
        jLabel17.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search.png"))); // NOI18N
        jLabel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, Color.decode("#4D92DF"), Color.decode("#4D92DF"), Color.decode("#4D92DF"), Color.decode("#4D92DF")));
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        CBOStatus.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        CBOStatus.setForeground(new java.awt.Color(51, 51, 51));
        CBOStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODOS", "ACTIVO", "INACTIVO" }));

        lblFound1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblFound1.setForeground(new java.awt.Color(51, 51, 51));
        lblFound1.setText("Ver:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblFound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFound1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CBOStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBOStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFound1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation(point.x - x, point.y - y);

    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void txtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMouseClicked
        txtBuscar.selectAll();
    }//GEN-LAST:event_txtBuscarMouseClicked

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed

    }//GEN-LAST:event_txtBuscarActionPerformed

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        String Busqueda = txtBuscar.getText();
        String consultaSQL = "";
        if (Busqueda.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe escribir una palabra");
            txtBuscar.requestFocus();
        } else {
            if (buscaPor.equals("CON")) {
                consultaSQL = "SELECT @rownum:=@rownum+1 AS contador,  `nombre_c`, `apellidoP_c`, `apellidoM_c`, `correo_c`, `estatus_c` "
                        + "FROM consultor, (SELECT @rownum:=0) R "
                        + "WHERE (CONCAT(nombre_c)  LIKE '%" + Busqueda + "%') "
                        + " or (CONCAT(apellidoP_c)  LIKE '%" + Busqueda + "%')    "
                        + " or (CONCAT(apellidoM_c)  LIKE '%" + Busqueda + "%')    "
                        + "AND estatus_c = '1' ORDER BY `consultor`.`nombre_c` ASC";
            } else if (buscaPor.equals("PRO")) {
                consultaSQL = "SELECT * FROM proyecto";
                //BUSQUEDA POR PROYECTO
            }
            CargaDatos(consultaSQL, Busqueda);
        }

    }//GEN-LAST:event_jLabel17MouseClicked

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        String valueBusqueda = txtBuscar.getText();
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getExtendedKeyCode() == KeyEvent.VK_TAB)) {
            if (valueBusqueda.equals("")) {
                JOptionPane.showMessageDialog(null, "Debe escribir una palabra");
                txtBuscar.requestFocus();
            } else {
                String consultaSQL = "";
                if (valueBusqueda.equals("")) {
                    JOptionPane.showMessageDialog(null, "Debe escribir una palabra");
                    txtBuscar.requestFocus();
                } else {
                    if (buscaPor.equals("CON")) {
                        consultaSQL = "SELECT @rownum:=@rownum+1 AS contador,  `nombre_c`, `apellidoP_c`, `apellidoM_c`, `correo_c`, `estatus_c` "
                                + "FROM consultor, (SELECT @rownum:=0) R "
                                + "WHERE (CONCAT(nombre_c)  LIKE '%" + valueBusqueda + "%') "
                                + " or (CONCAT(apellidoP_c)  LIKE '%" + valueBusqueda + "%')    "
                                + " or (CONCAT(apellidoM_c)  LIKE '%" + valueBusqueda + "%')    "
                                + "AND estatus_c = '1' ORDER BY `consultor`.`nombre_c` ASC";
                    } else if (buscaPor.equals("PRO")) {
                        consultaSQL = "SELECT * FROM proyecto";
                        //BUSQUEDA POR PROYECTO
                    }
                    CargaDatos(consultaSQL, valueBusqueda);
                }
            }
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void TBLRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBLRegistrosMouseClicked
        String nombre = TBLRegistros.getValueAt(TBLRegistros.getSelectedRow(), 1).toString();
        String apellidoP = TBLRegistros.getValueAt(TBLRegistros.getSelectedRow(), 2).toString();
        String apellidoM = TBLRegistros.getValueAt(TBLRegistros.getSelectedRow(), 3).toString();
        String sSQL = "SELECT ID_consultor FROM consultor WHERE nombre_c = '" + nombre + "' "
                + "AND apellidoP_c = '" + apellidoP + "' "
                + "AND apellidoM_c = '" + apellidoM + "'"
                + "AND estatus_c = '1' ;";
//        JOptionPane.showMessageDialog(null, nombre + " " + apellidoP + " " + apellidoM);
        String valorID = BuscaConsultor(sSQL);

        if (valorID == null) {
            //El usuario esta inactivo
            JOptionPane.showMessageDialog(null, "Al parecer este consultor está Inhabiltado.\nActive al consultor en el Catálogo");
        } else {
            Frame Admimistracion = null;
            JPanelUpdateNewConsultor PanelAdministrador = new JPanelUpdateNewConsultor(Admimistracion, true, valorID);
            PanelAdministrador.setVisible(true);
        }
        CargaDatos(cadena, value);
    }//GEN-LAST:event_TBLRegistrosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBOStatus;
    private javax.swing.JTable TBLRegistros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFound;
    private javax.swing.JLabel lblFound1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
